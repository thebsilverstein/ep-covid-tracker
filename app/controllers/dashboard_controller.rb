require 'facets/array/pad'

class DashboardController < ApplicationController
  def index

    @last_updated_on = Time.zone.parse("2020-09-13 10:38:00")

    total_cases_by_day_categories = ["3/13", "3/14", "3/15", "3/16", "3/17", "3/18", "3/19", "3/20", "3/21", "3/22", "3/23", "3/24", "3/25", "3/26", "3/27", "3/28", "3/29", "3/30", "3/31", "4/1", "4/2", "4/3", "4/4", "4/5", "4/6", "4/7", "4/8", "4/9", "4/10", "4/11", "4/12", "4/13", "4/14", "4/15", "4/16", "4/17", "4/18", "4/19", "4/20", "4/21", "4/22", "4/23", "4/24", "4/25", "4/26", "4/27", "4/28", "4/29", "4/30", "5/1", "5/2", "5/3", "5/4", "5/5", "5/6", "5/7", "5/8", "5/9", "5/10", "5/11", "5/12", "5/13", "5/14", "5/15", "5/16", "5/17", "5/18", "5/19", "5/20", "5/21", "5/22", "5/23", "5/24", "5/25", "5/26", "5/27", "5/28", "5/29", "5/30", "5/31", "6/1", "6/2", "6/3", "6/4", "6/5", "6/6", "6/7", "6/8", "6/9", "6/10", "6/11", "6/12", "6/13", "6/14", "6/15", "6/16", "6/17", "6/18", "6/19", "6/20", "6/21", "6/22", "6/23", "6/24", "6/25", "6/26", "6/27", "6/28", "6/29", "6/30", "7/1", "7/2", "7/3", "7/4", "7/5", "7/6", "7/7", "7/8", "7/9", "7/10", "7/11", "7/12", "7/13", "7/14", "7/15", "7/16", "7/17", "7/18", "7/19", "7/20", "7/21", "7/22", "7/23", "7/24", "7/25", "7/26", "7/27", "7/28", "7/29", "7/30", "7/31", "8/1", "8/2", "8/3", "8/4", "8/5", "8/6", "8/7", "8/8", "8/9", "8/10", "8/11", "8/12", "8/13", "8/14", "8/15", "8/16", "8/17", "8/18", "8/19", "8/20", "8/21", "8/22", "8/23", "8/24", "8/25", "8/26", "8/27", "8/28", "8/29", "8/30", "8/31", "9/1", "9/2", "9/3", "9/4", "9/5", "9/6", "9/7", "9/8", "9/9", "9/10", "9/11", "9/12", "9/13"]
    
    total_cases_by_day_data = [1, 1, 2, 3, 3, 3, 6, 6, 6, 6, 10, 12, 21, 25, 30, 35, 40, 46, 50, 68, 78, 96, 106, 115, 125, 153, 192, 225, 252, 269, 292, 300, 346, 393, 451, 482, 505, 531, 540, 587, 645, 674, 706, 780, 802, 829, 857, 887, 924, 961, 986, 998, 1029, 1080, 1119, 1190, 1276, 1322, 1340, 1348, 1413, 1456, 1607, 1655, 1726, 1772, 1800, 1852, 1930, 2046, 2160, 2265, 2340, 2376, 2393, 2461, 2569, 2623, 2704, 2764, 2794, 2833, 2872, 3069, 3213, 3298, 3376, 3453, 3512, 3582, 3650, 3695, 3794, 3834, 3911, 3948, 3999, 4088, 4178, 4340, 4488, 4553, 4677, 4809, 4984, 5217, 5330, 5614, 5745, 5928, 6124, 6389, 6665, 6953, 7213, 7461, 7642, 8035, 8385, 8746, 9099, 9510, 9716, 9953, 10298, 10638, 10843, 11132, 11573, 11769, 12041, 12297, 12501, 12750, 12971, 13240, 13327, 13552, 13807, 13939, 14276, 14410, 14712, 14914, 15142, 15427, 15596, 15908, 16040, 16308, 16396, 16936, 17210, 17378, 17632, 18079, 18350, 18486, 18682, 18914, 19057, 19177, 19316, 19396, 19554, 19622, 19753, 19925, 20072, 20217, 20350, 20460, 20539, 20611, 20686, 20850, 20939, 21035, 21093, 21187, 21259, 21335, 21458, 21559, 21621]
    delayed_results_by_day_data = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 325, 0, 0, 0, 356, 214, 11, 55, 80, 34, 32, 24, 10, 13, 6, 32, 22, 65, 22, 24, 2, 10, 6, 3, 4, 6, 16, 1, 5, 27, 4, 38, 21, 1]
    total_cases_by_day_max = 22000
    total_cases_by_day_tick_amount = 12
    new_cases_by_day_max = 600
    new_cases_by_day_tick_amount = 7
    active_cases_max = 5000
    active_cases_by_day_tick_amount = 6

    total_recoveries_by_day_data = [nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, 5, 9, 9, 10, 10, 16, 18, 18, 20, 29, 33, 33, 35, 41, 44, 48, 62, 63, 64, 67, 70, 80, 100, 121, 122, 184, 185, 265, 295, 334, 397, 419, 455, 474, 486, 514, 559, 619, 643, 672, 685, 685, 719, 751, 793, 819, 882, 903, 921, 984, 1028, 1106, 1157, 1208, 1237, 1267, 1335, 1385, 1465, 1508, 1602, 1618, 1621, 1704, 1797, 1921, 2133, 2241, 2266, 2290, 2369, 2430, 2538, 2600, 2681, 2712, 2732, 2795, 2914, 3023, 3083, 3154, 3175, 3191, 3301, 3361, 3465, 3550, 3613, 3654, 3685, 3800, 3908, 4034, 4227, 4362, 4447, 4546, 4682, 4904, 5155, 5341, 5572, 5699, 5879, 6080, 6448, 6757, 7067, 7253, 7413, 7616, 7817, 8242, 8726, 9114, 9348, 9476, 9671, 9942, 10280, 10476, 10699, 10910, 11037, 11128, 11243, 11407, 11566, 11669, 11842, 11946, 12047, 12388, 12551, 12882, 13105, 13296, 13443, 13593, 13770, 13948, 14475, 15060, 15591, 15734, 15887, 16082, 16210, 16413, 16557, 16766, 16831, 16906, 17042, 17145, 17312, 17431, 17534, 17617, 17700, 17785, 17903, 18036, 18122, 18211, 18297]

    total_deaths_by_day_categories = ["4/9", "4/10", "4/11", "4/12", "4/13", "4/14", "4/15", "4/16", "4/17", "4/18", "4/19", "4/20", "4/21", "4/22", "4/23", "4/24", "4/25", "4/26", "4/27", "4/28", "4/29", "4/30", "5/1", "5/2", "5/3", "5/4", "5/5", "5/6", "5/7", "5/8", "5/9", "5/10", "5/11", "5/12", "5/13", "5/14", "5/15", "5/16", "5/17", "5/18", "5/19", "5/20", "5/21", "5/22", "5/23", "5/24", "5/25", "5/26", "5/27", "5/28", "5/29", "5/30", "5/31", "6/1", "6/2", "6/3", "6/4", "6/5", "6/6", "6/7", "6/8", "6/9", "6/10", "6/11", "6/12", "6/13", "6/14", "6/15", "6/16", "6/17", "6/18", "6/19", "6/20", "6/21", "6/22", "6/23", "6/24", "6/25", "6/26", "6/27", "6/28", "6/29", "6/30", "7/1", "7/2", "7/3", "7/4", "7/5", "7/6", "7/7", "7/8", "7/9", "7/10", "7/11", "7/12", "7/13", "7/14", "7/15", "7/16", "7/17", "7/18", "7/19", "7/20", "7/21", "7/22", "7/23", "7/24", "7/25", "7/26", "7/27", "7/28", "7/29", "7/30", "7/31", "8/1", "8/2", "8/3", "8/4", "8/5", "8/6", "8/7", "8/8", "8/9", "8/10", "8/11", "8/12", "8/13", "8/14", "8/15", "8/16", "8/17", "8/18", "8/19", "8/20", "8/21", "8/22", "8/23", "8/24", "8/25", "8/26", "8/27", "8/28", "8/29", "8/30", "8/31", "9/1", "9/2", "9/3", "9/4", "9/5", "9/6", "9/7", "9/8", "9/9", "9/10", "9/11", "9/12", "9/13"]
    total_deaths_by_day_data = [1, 2, 2, 2, 2, 4, 6, 7, 7, 8, 8, 9, 9, 10, 10, 10, 12, 12, 12, 14, 18, 21, 22, 22, 22, 22, 22, 23, 30, 32, 32, 33, 33, 36, 41, 43, 45, 46, 47, 47, 52, 54, 57, 58, 58, 58, 58, 60, 68, 72, 77, 78, 78, 80, 83, 88, 89, 90, 90, 90, 91, 93, 93, 97, 98, 100, 100, 102, 109, 113, 119, 119, 120, 120, 120, 122, 122, 125, 126, 127, 127, 128, 130, 131, 132, 135, 135, 135, 135, 139, 144, 145, 150, 150, 151, 152, 157, 159, 173, 177, 179, 179, 184, 187, 196, 211, 218, 221, 224, 230, 239, 252, 259, 266, 269, 273, 276, 278, 280, 285, 286, 291, 293, 300, 307, 310, 330, 354, 357, 358, 361, 366, 372, 382, 386, 390, 390, 394, 397, 399, 410, 415, 417, 418, 419, 421, 421, 429, 433, 440, 445, 445, 448, 449, 452, 461, 462, 464]
    deaths_under_investigation_by_day_data = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 106, 106, 106, 106, 108, 126, 123, 121, 122, 114, 116, 117, 120, 123, 118, 120, 121]
    total_deaths_by_day_max = 500
    total_deaths_by_day_tick_amount = 6
    new_deaths_by_day_max_value = 25
    new_deaths_by_day_tick_amount = 6
    
    patients_hospitalized_categories = ["4/3", "4/4", "4/5", "4/6", "4/7", "4/8", "4/9", "4/10", "4/11", "4/12", "4/13", "4/14", "4/15", "4/16", "4/17", "4/18", "4/19", "4/20", "4/21", "4/22", "4/23", "4/24", "4/25", "4/26", "4/27", "4/28", "4/29", "4/30", "5/1", "5/2", "5/3", "5/4", "5/5", "5/6", "5/7", "5/8", "5/9", "5/10", "5/11", "5/12", "5/13", "5/14", "5/15", "5/16", "5/17", "5/18", "5/19", "5/20", "5/21", "5/22", "5/23", "5/24", "5/25", "5/26", "5/27", "5/28", "5/29", "5/30", "5/31", "6/1", "6/2", "6/3", "6/4", "6/5", "6/6", "6/7", "6/8", "6/9", "6/10", "6/11", "6/12", "6/13", "6/14", "6/15", "6/16", "6/17", "6/18", "6/19", "6/20", "6/21", "6/22", "6/23", "6/24", "6/25", "6/26", "6/27", "6/28", "6/29", "6/30", "7/1", "7/2", "7/3", "7/4", "7/5", "7/6", "7/7", "7/8", "7/9", "7/10", "7/11", "7/12", "7/13", "7/14", "7/15", "7/16", "7/17", "7/18", "7/19", "7/20", "7/21", "7/22", "7/23", "7/24", "7/25", "7/26", "7/27", "7/28", "7/29", "7/30", "7/31", "8/1", "8/2", "8/3", "8/4", "8/5", "8/6", "8/7", "8/8", "8/9", "8/10", "8/11", "8/12", "8/13", "8/14", "8/15", "8/16", "8/17", "8/18", "8/19", "8/20", "8/21", "8/22", "8/23", "8/24", "8/25", "8/26", "8/27", "8/28", "8/29", "8/30", "8/31", "9/1", "9/2", "9/3", "9/4", "9/5", "9/6", "9/7", "9/8", "9/9", "9/10", "9/11", "9/12", "9/13"]
    patients_in_icu_categories = ["4/3", "4/4", "4/5", "4/6", "4/7", "4/8", "4/9", "4/10", "4/11", "4/12", "4/13", "4/14", "4/15", "4/16", "4/17", "4/18", "4/19", "4/20", "4/21", "4/22", "4/23", "4/24", "4/25", "4/26", "4/27", "4/28", "4/29", "4/30", "5/1", "5/2", "5/3", "5/4", "5/5", "5/6", "5/7", "5/8", "5/9", "5/10", "5/11", "5/12", "5/13", "5/14", "5/15", "5/16", "5/17", "5/18", "5/19", "5/20", "5/21", "5/22", "5/23", "5/24", "5/25", "5/26", "5/27", "5/28", "5/29", "5/30", "5/31", "6/1", "6/2", "6/3", "6/4", "6/5", "6/6", "6/7", "6/8", "6/9", "6/10", "6/11", "6/12", "6/13", "6/14", "6/15", "6/16", "6/17", "6/18", "6/19", "6/20", "6/21", "6/22", "6/23", "6/24", "6/25", "6/26", "6/27", "6/28", "6/29", "6/30", "7/1", "7/2", "7/3", "7/4", "7/5", "7/6", "7/7", "7/8", "7/9", "7/10", "7/11", "7/12", "7/13", "7/14", "7/15", "7/16", "7/17", "7/18", "7/19", "7/20", "7/21", "7/22", "7/23", "7/24", "7/25", "7/26", "7/27", "7/28", "7/29", "7/30", "7/31", "8/1", "8/2", "8/3", "8/4", "8/5", "8/6", "8/7", "8/8", "8/9", "8/10", "8/11", "8/12", "8/13", "8/14", "8/15", "8/16", "8/17", "8/18", "8/19", "8/20", "8/21", "8/22", "8/23", "8/24", "8/25", "8/26", "8/27", "8/28", "8/29", "8/30", "8/31", "9/1", "9/2", "9/3", "9/4", "9/5", "9/6", "9/7", "9/8", "9/9", "9/10", "9/11", "9/12", "9/13"]
    patients_hospitalized_data = [19, 26, 27, 27, 27, 40, 48, 52, 48, 57, 58, 61, 65, 48, 38, 25, 29, 38, 37, 35, 33, 38, 36, 38, 35, 35, 52, 53, 58, 61, 59, 65, 71, 68, 62, 83, 82, 85, 80, 80, 73, 76, 74, 78, 74, 77, 107, 109, 109, 119, 116, 109, 112, 106, 110, 118, 111, 106, 103, 99, 96, 91, 106, 98, 98, 87, 96, 95, 82, 81, 85, 88, 85, 78, 87, 98, 101, 106, 108, 102, 95, 95, 107, 108, 118, 121, 147, 149, 160, 177, 180, 193, 200, 211, 218, 246, 259, 258, 261, 251, 277, 285, 283, 287, 272, 268, 292, 274, 290, 306, 310, 310, 317, 310, 310, 289, 283, 266, 279, 264, 274, 278, 290, 288, 250, 248, 234, 232, 211, 198, 208, 185, 194, 183, 161, 161, 148, 160, 168, 161, 166, 135, 136, 136, 131, 131, 134, 140, 139, 133, 124, 131, 127, 123, 107, 108, 106, 103, 108, 116, 111, 114, 115, 110]
    patients_in_icu_data = [8, 8, 10, 10, 10, 12, 19, 21, 22, 23, 23, 26, 27, 10, 11, 10, 8, 13, 13, 18, 21, 26, 16, 18, 19, 19, 27, 31, 30, 39, 21, 38, 40, 39, 40, 47, 40, 39, 34, 40, 35, 38, 39, 41, 32, 35, 46, 52, 56, 65, 66, 61, 66, 67, 65, 67, 67, 59, 54, 56, 59, 54, 63, 54, 56, 53, 64, 61, 59, 54, 45, 51, 51, 50, 51, 52, 55, 52, 52, 52, 51, 50, 47, 48, 58, 63, 68, 64, 69, 70, 74, 69, 71, 71, 70, 71, 75, 81, 84, 84, 91, 91, 98, 97, 100, 102, 109, 104, 110, 110, 116, 116, 105, 97, 108, 108, 114, 106, 104, 100, 105, 104, 103, 96, 85, 89, 85, 78, 72, 73, 75, 67, 69, 56, 53, 59, 56, 57, 52, 50, 52, 46, 50, 53, 55, 51, 50, 52, 51, 53, 53, 54, 54, 48, 49, 45, 45, 47, 48, 52, 48, 46, 48, 45]
    patients_hospitalized_max_value = 350
    patients_hospitalized_tick_amount = 8
    patients_in_icu_max_value = 125
    patients_in_icu_tick_amount = 6

    total_cases_by_age_range_categories = ["12 & Under", "Teens", "20-29", "30-39", "40-49", "50-59", "60-69", "70-79", "80-89", "90-99", "100-109"]
    total_cases_by_age_range_data = [1107, 1451, 5023, 3951, 3307, 2904, 1888, 1010, 658, 306, 14]
    total_cases_by_age_range_max = 6000
    total_cases_by_age_range_tick_amount = 7

    total_deaths_by_age_range_data = [0, 1, 2, 5, 25, 50, 80, 115, 116, 69, 1]
    total_deaths_by_age_range_max = 120

    total_cases_by_gender_male = 10569
    total_cases_by_gender_female = 11052

    zip_data_categories_1 = ["3/31", "4/1", "4/2", "4/3", "4/4", "4/5", "4/6", "4/7", "4/8", "4/9", "4/10", "4/11", "4/12", "4/13", "4/14", "4/15", "4/16", "4/17", "4/18", "4/19", "4/20", "4/21", "4/22", "4/23", "4/24", "4/25", "4/26", "4/27", "4/28", "4/29", "4/30", "5/1", "5/2", "5/3", "5/4", "5/5", "5/6", "5/7", "5/8", "5/9", "5/10", "5/11", "5/12", "5/13", "5/14", "5/15", "5/16", "5/17", "5/18", "5/19", "5/20", "5/21", "5/22", "5/23", "5/24", "5/25", "5/26", "5/27", "5/28", "5/29", "5/30", "5/31", "6/1", "6/2", "6/3", "6/4", "6/5", "6/6", "6/7", "6/8", "6/9", "6/10", "6/11", "6/12", "6/13", "6/14", "6/15", "6/16", "6/17", "6/18", "6/19", "6/20", "6/21", "6/22", "6/23", "6/24", "6/25", "6/26", "6/27", "6/28", "6/29", "6/30", "7/1", "7/2", "7/3", "7/4", "7/5", "7/6", "7/7", "7/8", "7/9", "7/10", "7/11", "7/12", "7/13", "7/14", "7/15", "7/16", "7/17", "7/18", "7/19", "7/20", "7/21", "7/22", "7/23", "7/24", "7/25", "7/26", "7/27", "7/28", "7/29", "7/30", "7/31", "8/1", "8/2", "8/3", "8/4", "8/5", "8/6", "8/7", "8/8", "8/9", "8/10", "8/11", "8/12", "8/13", "8/14", "8/15", "8/16", "8/17", "8/18", "8/19", "8/20", "8/21", "8/22", "8/23", "8/24", "8/25", "8/26", "8/27", "8/28", "8/29", "8/30", "8/31", "9/1", "9/2", "9/3", "9/4", "9/5", "9/6", "9/7", "9/8", "9/9", "9/10", "9/11", "9/12", "9/13"]

    @total_cases_by_zip_code = [ [79821, "https://goo.gl/maps/fyDXByr3a6WyCLfh9", 143 ],
                                 [79835, "https://goo.gl/maps/WFSWehxhFTNPUVLb8", 362 ],
                                 [79836, "https://goo.gl/maps/mphTKm8jo7MZAmZN8", 187 ],
                                 [79838, "https://goo.gl/maps/LsXCW6txwEeGv4wH6", 226 ],
                                 [79849, "https://goo.gl/maps/48ZtmYoSB18FMxei9", 332 ],
                                 [79853, "https://goo.gl/maps/94CsB2nh12CsY12V7", 94 ],
                                 [79901, "https://goo.gl/maps/V8Pr5wRQvUwMYsLq8", 509 ],
                                 [79902, "https://goo.gl/maps/GhAYCydGe7sceeqBA", 548 ],
                                 [79903, "https://goo.gl/maps/njkWwDrBedvfJ3pdA", 448 ],
                                 [79904, "https://goo.gl/maps/ShNJW7b9ukMkgdsW9", 544 ],
                                 [79905, "https://goo.gl/maps/FaPYhZkQQivu5bpP7", 628 ],
                                 [79907, "https://goo.gl/maps/JU1tEasu4SF4Morf7", 1448 ],
                                 [79911, "https://goo.gl/maps/ra1N74NDxhGZosh18", 198 ],
                                 [79912, "https://goo.gl/maps/Kz49kbnE2EzADkvt9", 1571 ],
                                 [79915, "https://goo.gl/maps/kzwmzKxRakK6ssRa6", 866 ],
                                 [79922, "https://goo.gl/maps/a68MXDGZSk2jr9u7A", 160 ],
                                 [79924, "https://goo.gl/maps/U9yL1pJQTKv2riS56", 1110 ],
                                 [79925, "https://goo.gl/maps/gTb8iXhw6RBuHPpu7", 1109 ],
                                 [79927, "https://goo.gl/maps/nquJLGWtgKiU3Z4o7", 1261 ],
                                 [79928, "https://goo.gl/maps/XwoKG1sLG1FiEBwE9", 1992 ],
                                 [79930, "https://goo.gl/maps/uwWrGWqbYkCqTpv99", 584 ],
                                 [79932, "https://goo.gl/maps/YKuWPdsoiejNWvnh6", 625 ],
                                 [79934, "https://goo.gl/maps/ozgMKwoosWHWtDGPA", 424 ],
                                 [79935, "https://goo.gl/maps/jiS5uroU4meDaET68", 455 ],
                                 [79936, "https://goo.gl/maps/8bzvY2hcPK8qUcWu9", 3110 ],
                                 [79938, "https://goo.gl/maps/jNF1sLZ61ubkvohR9", 2687 ], ]

    zip_data = [[79821, [1, 1, 1, 1, 1,     1,  1 , 1,  1,  1,  1 , 1,  1,   1,  1,   1,   1,  1,  1,  1,  1,  1,  1,  1,  1,   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,   3,   4,   4,   4,   4,   6,   6,   6,   7,   7,   8,   8,   8,   8,   8,   8,   9,   10,  10,  10,  10,  10,  11,  12,  14,  15,  15,  15,  17,  18,  18,  18,  18,  18,  18,  19,  19,  19,  19,  19,  19,  20,  22,  22,  23,  23,  23,  23,  23,  25,  25,  26,  26,  26,  26,  25,  25,  25,  26, 27, 28, 29, 30, 33, 33, 34, 35, 39, 41, 43, 46, 48, 47, 49, 51, 52, 53, 53, 54, 56, 56, 58, 59, 59, 60, 61, 68, 68, 68, 69, 69, 69, 69, 70, 70, 73, 85, 84, 85, 86, 90, 91, 91, 93, 96, 97, 101, 101, 102, 104, 104, 105, 107, 108, 108, 109, 110, 110, 110, 110, 119, 119, 120, 121, 124, 142, 142, 143]],
                [79835,             [2,     2,  2 , 2,  2,  2,  2 , 2,  2,   3,  4,   6,   7,  7,  7,  7,  7,  7,  7,  8,  8,   12,  12,  13,  14,  19,  21,  27,  27,  27,  27,  30,  32,  34,  37,  39,  39,  39,  43,  46,  48,  48,  53,  54,  54,  54,  57,  59,  60,  61,  62,  63,  66,  69,  74,  74,  76,  77,  79,  82,  83,  88,  92,  94,  98,  101, 102, 104, 106, 110, 110, 112, 116, 115, 118, 118, 118, 122, 128, 129, 133, 133, 135, 136, 136, 136, 138, 140, 140, 143, 149, 149, 148, 153, 157, 163, 165, 172, 176, 181, 183, 186, 187, 192, 194, 195, 198, 199, 202, 208, 212, 214, 216, 221, 222, 226, 228, 231, 241, 241, 242, 245, 253, 261, 264, 265, 265, 268, 268, 285, 294, 298, 300, 306, 310, 311, 314, 320, 322, 322, 325, 327, 328, 330, 331, 333, 336, 338, 343, 345, 344, 345, 351, 354, 355, 356, 358, 358, 358, 358, 359, 362]],
                [79836, [                                                             1,   1,  1,  1,  2,  2,  2,  4,  4,  4,   4,   4,   4,   5,   5,   5,   5,   5,   5,   6,   6,   7,   7,   9,   10,  10,  10,  10,  10,  10,  10,  12,  12,  12,  12,  12,  13,  15,  15,  15,  15,  15,  17,  17,  20,  20,  21,  21,  19,  19,  22,  23,  23,  23,  27,  27,  28,  29,  31,  31,  31,  32,  32,  33,  35,  35,  38,  40,  42,  45,  46,  46,  47,  48,  52,  56,  59,  59,  62,  64,  65,  67, 67, 66, 66, 66, 67, 68, 70, 71, 73, 76, 78, 79, 80, 84, 84, 85, 85, 85, 86, 86, 90, 92, 93, 93, 93, 98, 100, 103, 104, 106, 110, 110, 110, 113, 114, 118, 126, 130, 142, 145, 149, 150, 152, 156, 159, 159, 159, 159, 159, 160, 160, 166, 168, 169, 169, 170, 171, 171, 171, 175, 176, 180, 180, 182, 182, 186, 187, 187, 187]],
                [79838, [                                           1,  1,   1,  1,   2,   3,  5,  5,  6,  6,  7,  8,  8,  8,   8,   8,   8,   8,   8,   8,   8,   9,   9,   9,   10,  10,  12,  13,  13,  13,  13,  14,  15,  18,  18,  18,  18,  18,  20,  20,  21,  22,  24,  24,  24,  24,  25,  26,  27,  28,  28,  28,  28,  28,  29,  30,  30,  31,  31,  31,  31,  32,  32,  32,  32,  32,  32,  33,  33,  33,  37,  38,  40,  44,  44,  44,  46,  46,  52,  54,  61,  61,  62,  64,  66,  68, 72, 78, 84, 85, 93, 93, 96, 98, 101, 105, 108, 109, 115, 118, 122, 124, 128, 130, 131, 133, 134, 134, 135, 136, 138, 142, 144, 148, 149, 151, 176, 177, 178, 178, 184, 185, 192, 194, 197, 197, 200, 203, 204, 206, 206, 207, 208, 208, 210, 210, 210, 211, 212, 212, 212, 212, 214, 218, 220, 219, 221, 223, 223, 225, 225, 226, 226, 226, 226]],
                [79849,    [1, 1, 1, 1,     1,  1 , 1,  2,  3,  3 , 3,  3,   3,  4,   5,   5,  5,  5,  6,  6,  6,  9,  11, 12,  16,  16,  15,  16,  16,  18,  18,  18,  18,  18,  19,  22,  22,  23,  23,  23,  23,  25,  26,  31,  38,  38,  40,  41,  42,  50,  52,  53,  54,  56,  56,  56,  56,  58,  58,  58,  58,  58,  61,  62,  67,  67,  69,  74,  74,  74,  75,  76,  76,  79,  81,  83,  84,  85,  87,  88,  98,  104, 109, 115, 118, 123, 129, 129, 133, 134, 136, 138, 143, 144, 146, 148, 148, 151, 152, 161, 166, 168, 173, 175, 180, 181, 185, 190, 192, 199, 201, 202, 202, 202, 203, 205, 209, 209, 209, 212, 213, 218, 221, 222, 226, 226, 233, 240, 244, 256, 261, 261, 267, 268, 273, 274, 281, 282, 283, 297, 298, 298, 300, 300, 300, 300, 304, 305, 308, 311, 311, 315, 319, 321, 323, 324, 325, 328, 328, 328, 329, 331, 331, 331, 332]],
                [79853,          [1, 1,     1,  1 , 2,  2,  2,  2 , 2,  2,   2,  2,   2,   3,  3,  4,  7,  7,  8,  8,  10, 10,  11,  12,  12,  12,  14,  15,  15,  16,  16,  16,  19,  19,  20,  23,  23,  23,  23,  24,  24,  27,  27,  27,  27,  27,  27,  27,  27,  27,  28,  28,  28,  28,  28,  28,  30,  30,  30,  30,  30,  30,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  33,  34,  35,  36,  37,  37,  38,  38,  39,  39,  39,  40,  41,  41,  41,  41, 43, 43, 44, 44, 44, 44, 46, 46, 47, 49, 49, 49, 51, 52, 54, 55, 56, 56, 56, 56, 58, 58, 58, 58, 58, 60, 62, 62, 62, 62, 64, 64, 64, 70, 70, 70, 71, 72, 71, 72, 76, 77, 79, 81, 82, 82, 82, 85, 85, 85, 86, 90, 90, 91, 91, 91, 91, 91, 91, 91, 91, 92, 92, 92, 92, 92, 92, 93, 94]],
                [79901, [                                                                                                       1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   5,   5,   6,   9,   12,  12,  12,  15,  16,  20,  21,  21,  22,  22,  25,  28,  28,  36,  40,  43,  44,  44,  46,  48,  48,  49,  50,  50,  53,  54,  55,  56,  59,  60,  63,  63,  65,  68,  70,  70,  70,  72,  74,  74,  77,  88,  92,  94,  95,  97,  98,  102, 110, 125, 136, 143, 148, 167, 183, 186, 263, 294, 295, 296, 299, 300, 304, 310, 313, 313, 316, 319, 325, 326, 341, 346, 349, 354, 356, 356, 363, 366, 371, 372, 375, 379, 379, 387, 388, 390, 394, 397, 401, 406, 410, 415, 417, 417, 429, 430, 433, 436, 438, 440, 443, 447, 448, 453, 456, 457, 458, 462, 465, 472, 473, 474, 485, 488, 490, 491, 491, 492, 497, 499, 501, 501, 501, 503, 505, 508, 509]],
                [79902, [2, 2, 2, 2, 2,     2,  2 , 2,  2,  2,  2 , 2,  3,   3,  4,   6,   6,  6,  6,  6,  6,  7,  7,  7,  7,   9,   9,   10,  10,  10,  10,  11,  11,  11,  13,  13,  13,  13,  14,  15,  16,  16,  18,  18,  24,  34,  36,  36,  36,  39,  40,  43,  77,  106, 114, 117, 117, 121, 122, 123, 124, 124, 125, 124, 124, 130, 131, 133, 136, 137, 139, 143, 147, 147, 151, 151, 153, 153, 154, 157, 157, 160, 164, 165, 169, 169, 171, 175, 181, 183, 183, 185, 190, 195, 200, 202, 206, 210, 215, 223, 231, 236, 245, 250, 252, 257, 260, 268, 277, 289, 293, 294, 299, 303, 310, 317, 336, 339, 342, 345, 346, 350, 364, 369, 379, 382, 383, 392, 397, 408, 412, 414, 416, 423, 432, 438, 442, 456, 461, 466, 473, 478, 482, 488, 491, 490, 491, 496, 499, 504, 507, 510, 510, 511, 513, 516, 516, 519, 525, 525, 527, 531, 533, 537, 539, 548]],
                [79903, [                   1,  1 , 1,  2,  2,  2 , 5,  8,   8,  8,   9,   11, 11, 11, 12, 13, 14, 18, 22, 24,  27,  27,  31,  32,  35,  35,  38,  40,  40,  40,  40,  42,  43,  44,  44,  46,  46,  46,  47,  54,  54,  54,  55,  55,  56,  58,  63,  69,  72,  73,  73,  73,  79,  81,  81,  83,  84,  86,  85,  85,  86,  88,  96,  119, 120, 120, 123, 127, 128, 141, 142, 143, 144, 143, 143, 145, 154, 156, 156, 158, 166, 183, 187, 189, 203, 207, 210, 212, 212, 219, 219, 224, 227, 228, 237, 248, 256, 261, 266, 265, 273, 277, 285, 290, 293, 302, 308, 314, 322, 327, 330, 331, 337, 337, 338, 339, 342, 349, 350, 358, 359, 362, 364, 365, 369, 372, 382, 382, 393, 397, 398, 401, 411, 412, 411, 412, 418, 420, 422, 423, 425, 425, 426, 428, 431, 433, 434, 438, 441, 439, 440, 439, 442, 445, 446, 445, 446, 446, 447, 447, 448]],
                [79904, [3, 6, 7, 7, 8,     8,  8 , 8,  9,  9,  9 , 10, 10,  10, 10,  13,  14, 15, 15, 15, 15, 17, 20, 20, 20,  22,  22,  23,  23,  23,  24,  27,  28,  29,  31,  33,  34,  37,  38,  39,  41,  41,  42,  44,  49,  51,  52,  53,  55,  55,  58,  59,  62,  64,  65,  66,  66,  67,  71,  73,  73,  74,  76,  77,  81,  88,  93,  96,  97,  101, 101, 101, 108, 108, 109, 110, 113, 114, 114, 117, 120, 123, 124, 129, 131, 132, 133, 140, 142, 153, 156, 160, 165, 170, 176, 181, 188, 192, 197, 205, 207, 212, 218, 225, 228, 232, 242, 245, 247, 253, 262, 264, 266, 277, 280, 288, 293, 297, 298, 304, 307, 314, 321, 326, 340, 351, 359, 370, 377, 385, 386, 390, 392, 414, 427, 427, 439, 451, 462, 464, 467, 470, 472, 473, 481, 480, 483, 484, 492, 500, 503, 509, 513, 516, 526, 528, 529, 531, 534, 534, 536, 536, 537, 541, 540, 544]],
                [79905, [1, 2, 2, 3, 3,     3,  3 , 3,  10, 15, 15, 14, 16,  16, 17,  20,  23, 24, 24, 28, 29, 32, 36, 37, 38,  43,  43,  47,  48,  49,  50,  52,  52,  52,  53,  54,  56,  58,  64,  64,  59,  59,  60,  60,  62,  65,  69,  70,  71,  76,  76,  79,  83,  88,  89,  93,  96,  97,  105, 110, 110, 114, 114, 115, 115, 120, 121, 123, 126, 128, 129, 132, 133, 136, 137, 140, 140, 144, 146, 151, 153, 156, 158, 159, 163, 169, 171, 177, 177, 180, 183, 188, 190, 198, 209, 216, 223, 229, 231, 236, 242, 249, 257, 276, 284, 288, 298, 299, 301, 309, 322, 324, 333, 338, 342, 347, 350, 358, 360, 364, 367, 370, 389, 392, 408, 417, 421, 432, 435, 448, 449, 545, 458, 472, 474, 485, 494, 502, 518, 519, 524, 529, 532, 535, 537, 538, 541, 543, 546, 554, 566, 566, 572, 574, 574, 580, 590, 598, 602, 607, 611, 616, 620, 623, 626, 628]],
                [79907, [4, 4, 4, 5, 5,     5,  5 , 8,  8,  9,  9 , 11, 11,  11, 16,  19,  23, 24, 24, 26, 26, 28, 30, 31, 36,  38,  38,  41,  43,  45,  45,  45,  46,  47,  51,  51,  52,  56,  62,  64,  66,  67,  76,  79,  86,  91,  94,  98,  102, 107, 110, 118, 124, 128, 132, 132, 132, 139, 146, 147, 151, 151, 153, 155, 166, 176, 183, 184, 190, 191, 197, 200, 201, 201, 206, 209, 217, 218, 222, 227, 234, 242, 249, 255, 267, 277, 291, 305, 311, 324, 333, 346, 358, 378, 401, 426, 443, 459, 481, 516, 543, 557, 584, 612, 624, 634, 650, 678, 689, 707, 729, 747, 768, 785, 796, 806, 818, 837, 843, 849, 895, 900, 929, 940, 959, 972, 984, 1014, 1035, 1061, 1069, 1081, 1084, 1130, 1150, 1167, 1176, 1213, 1224, 1237, 1249, 1272, 1279, 1287, 1292, 1302, 1315, 1318, 1323, 1336, 1354, 1364, 1375, 1380, 1382, 1387, 1387, 1396, 1408, 1413, 1422, 1430, 1435, 1441, 1447, 1448]],
                [79911, [2, 2, 3, 3, 3,     3,  3 , 3,  3,  3,  3 , 3,  3,   3,  3,   3,   3,  3,  3,  3,  3,  3,  3,  3,  4,   4,   6,   6,   6,   6,   6,   6,   6,   6,   6,   7,   7,   8,   7,   8,   8,   8,   8,   8,   8,   11,  11,  11,  11,  11,  11,  11,  11,  12,  12,  12,  12,  12,  12,  13,  13,  13,  13,  13,  14,  14,  15,  15,  16,  18,  19,  19,  19,  20,  21,  21,  21,  21,  21,  22,  22,  22,  22,  22,  22,  24,  27,  28,  28,  29,  29,  30,  30,  33,  33,  34,  38, 38, 38, 45, 48, 59, 61, 64, 65, 65, 69, 76, 78, 83, 103, 98, 99, 99, 99, 113, 133, 134, 134, 136, 137, 139, 140, 142, 143, 144, 146, 147, 147, 150, 152, 155, 158, 161, 165, 166, 166, 168, 170, 170, 170, 173, 176, 178, 178, 178, 178, 178, 180, 181, 181, 183, 190, 189, 189, 189, 189, 190, 190, 192, 192, 195, 194, 195, 196, 198]],
                [79912, [6, 7, 7, 8, 9,     9,  10, 12, 14, 20, 24, 25, 25,  27, 29,  32,  38, 39, 40, 40, 40, 44, 50, 53, 55,  59,  65,  67,  72,  73,  76,  76,  76,  77,  78,  82,  82,  84,  91,  97,  99,  101, 102, 103, 115, 116, 118, 121, 123, 126, 135, 151, 160, 169, 175, 178, 179, 185, 194, 200, 202, 209, 212, 212, 215, 231, 229, 236, 242, 244, 246, 251, 253, 256, 258, 262, 264, 267, 271, 277, 286, 295, 309, 314, 321, 325, 340, 348, 354, 385, 393, 407, 421, 461, 482, 485, 502, 521, 534, 561, 576, 606, 640, 673, 694, 707, 730, 759, 773, 791, 823, 838, 856, 869, 893, 914, 921, 946, 950, 975, 986, 996, 1023, 1034, 1046, 1063, 1085, 1108, 1117, 1134, 1140, 1162, 1171, 1212, 1238, 1247, 1266, 1299, 1323, 1331, 1341, 1373, 1383, 1395, 1401, 1403, 1408, 1414, 1418, 1428, 1447, 1457, 1468, 1472, 1476, 1481, 1487, 1511, 1524, 1529, 1530, 1534, 1538, 1551, 1566, 1571]],
                [79915, [1, 1, 1, 1, 1,     1,  2 , 4,  11, 12, 13, 13, 14,  15, 19,  23,  27, 28, 29, 31, 32, 32, 34, 35, 35,  37,  37,  36,  36,  36,  36,  37,  39,  39,  40,  44,  49,  51,  55,  59,  60,  60,  64,  67,  76,  76,  77,  81,  82,  83,  85,  91,  97,  98,  103, 103, 102, 103, 103, 106, 108, 108, 110, 112, 113, 117, 119, 122, 123, 125, 125, 129, 131, 136, 140, 141, 144, 146, 147, 151, 154, 165, 175, 181, 185, 187, 194, 199, 205, 215, 223, 231, 239, 248, 262, 265, 267, 276, 284, 342, 351, 363, 387, 400, 410, 423, 432, 446, 461, 468, 481, 491, 505, 509, 516, 524, 533, 545, 546, 553, 560, 565, 578, 585, 593, 602, 609, 621, 632, 646, 648, 660, 663, 674, 687, 695, 702, 723, 733, 742, 750, 760, 766, 771, 778, 782, 787, 789, 793, 798, 803, 813, 818, 823, 824, 827, 829, 834, 839, 842, 849, 853, 857, 859, 859, 866]],
                [79922, [                                           1,  1,   2,  2,   2,   4,  4,  4,  4,  4,  4,  4,  4,  4,   4,   4,   4,   4,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   6,   6,   6,   7,   7,   10,  9,   10,  10,  10,  10,  11,  12,  12,  12,  13,  13,  13,  13,  13,  14,  15,  17,  18,  18,  18,  19,  19,  19,  20,  20,  20,  20,  20,  20,  20,  20,  20,  21,  21,  21,  21,  22,  23,  23,  23,  24,  25,  25,  25,  25,  25,  29,  29,  31,  33,  34,  36, 38, 40, 42, 43, 46, 49, 50, 51, 53, 55, 57, 58, 59, 61, 65, 66, 70, 71, 77, 80, 80, 80, 84, 84, 86, 88, 89, 92, 92, 93, 94, 96, 101, 100, 102, 105, 110, 115, 117, 123, 128, 136, 138, 141, 141, 144, 144, 144, 144, 146, 145, 147, 148, 149, 149, 150, 150, 151, 151, 151, 151, 151, 151, 154, 155, 156, 159, 160, 160]],
                [79924, [2, 2, 3, 3, 3,     3,  4 , 4,  8,  10, 12, 15, 15,  15, 18,  18,  21, 21, 22, 22, 22, 27, 28, 29, 33,  33,  33,  34,  37,  37,  38,  39,  41,  42,  42,  45,  52,  57,  64,  67,  68,  68,  72,  76,  88,  88,  102, 107, 108, 114, 115, 123, 121, 126, 129, 131, 132, 136, 139, 144, 148, 153, 154, 156, 158, 165, 171, 174, 175, 178, 179, 180, 185, 185, 188, 191, 195, 196, 196, 208, 212, 221, 228, 229, 233, 246, 249, 257, 263, 276, 278, 285, 294, 304, 309, 322, 332, 344, 353, 366, 379, 395, 412, 433, 444, 460, 478, 503, 515, 519, 553, 560, 571, 585, 593, 607, 616, 627, 630, 640, 650, 656, 675, 682, 702, 717, 733, 743, 747, 768, 772, 791, 795, 821, 847, 854, 874, 897, 917, 926, 942, 951, 958, 960, 971, 976, 997, 1000, 1006, 1021, 1022, 1030, 1035, 1041, 1045, 1050, 1053, 1063, 1076, 1078, 1081, 1082, 1085, 1099, 1107, 1110]],
                [79925, [2, 3, 4, 5, 5,     5,  6 , 7,  7,  8,  9 , 9,  9,   9,  10,  10,  13, 13, 16, 18, 21, 24, 26, 26, 27,  30,  31,  31,  32,  33,  36,  37,  40,  40,  42,  43,  44,  52,  53,  53,  55,  55,  58,  62,  69,  71,  74,  77,  78,  76,  79,  86,  88,  92,  93,  93,  93,  94,  119, 122, 124, 127, 132, 132, 132, 144, 147, 153, 154, 187, 208, 213, 215, 216, 221, 224, 228, 230, 229, 237, 240, 254, 264, 264, 271, 276, 286, 291, 293, 301, 308, 316, 323, 334, 352, 369, 377, 385, 394, 408, 432, 442, 458, 502, 515, 536, 565, 595, 603, 614, 635, 645, 656, 662, 672, 690, 704, 718, 720, 727, 734, 742, 757, 760, 780, 789, 796, 813, 819, 822, 825, 837, 843, 863, 874, 882, 892, 916, 937, 941, 955, 967, 973, 975, 989, 996, 1002, 1004, 1011, 1020, 1029, 1036, 1042, 1048, 1055, 1058, 1063, 1068, 1082, 1082, 1082, 1087, 1091, 1097, 1107, 1109]],
                [79927, [3, 3, 5, 7, 8,     8,  8 , 10, 11, 12, 13, 15, 16,  16, 18,  18,  20, 20, 20, 20, 20, 24, 26, 27, 30,  39,  40,  43,  44,  47,  49,  52,  53,  53,  55,  61,  62,  69,  73,  74,  75,  77,  80,  84,  88,  91,  97,  98,  99,  102, 108, 111, 118, 121, 129, 135, 137, 140, 150, 153, 159, 165, 165, 172, 172, 183, 184, 207, 214, 216, 217, 217, 225, 226, 235, 239, 243, 249, 252, 259, 264, 280, 283, 293, 300, 306, 313, 324, 332, 361, 368, 382, 389, 403, 422, 437, 452, 464, 481, 501, 527, 545, 571, 585, 596, 604, 632, 653, 667, 677, 697, 716, 736, 752, 765, 778, 789, 797, 800, 805, 828, 846, 852, 858, 860, 883, 898, 909, 922, 949, 956, 976, 982, 1008, 1015, 1022, 1029, 1046, 1054, 1063, 1076, 1091, 1096, 1121, 1125, 1129, 1134, 1141, 1146, 1163, 1172, 1176, 1185, 1189, 1191, 1194, 1199, 1212, 1227, 1229, 1235, 1243, 1249, 1254, 1258, 1261]],
                [79928, [8, 11, 11, 11, 13, 13, 14, 16, 18, 21, 22, 23, 25,  25, 28,  32,  36, 37, 39, 43, 44, 45, 47, 50, 52,  55,  57,  56,  59,  60,  64,  65,  66,  67,  68,  75,  77,  81,  89,  92,  93,  94,  100, 105, 119, 120, 127, 128, 130, 133, 145, 154, 163, 171, 180, 183, 186, 195, 201, 207, 207, 213, 216, 219, 224, 241, 244, 249, 250, 252, 259, 264, 268, 272, 284, 288, 295, 297, 303, 311, 317, 325, 338, 347, 360, 377, 400, 420, 426, 450, 463, 483, 497, 520, 543, 561, 589, 607, 618, 649, 677, 711, 746, 810, 837, 861, 903, 937, 957, 974, 1043, 1059, 1090, 1122, 1141, 1158, 1172, 1203, 1208, 1231, 1248, 1258, 1290, 1302, 1334, 1354, 1369, 1389, 1405, 1441, 1449, 1469, 1484, 1555, 1572, 1590, 1619, 1666, 1683, 1696, 1711, 1727, 1745, 1748, 1761, 1777, 1793, 1797, 1811, 1818, 1829, 1848, 1858, 1876, 1884, 1889, 1895, 1915, 1933, 1941, 1961, 1966, 1975, 1982, 1991, 1992]],
                [79930, [                               2,  2,  2 , 2,  3,   3,  4,   7,   8,  10, 12, 14, 14, 15, 18, 18, 19,  21,  22,  22,  22,  22,  27,  27,  27,  28,  28,  32,  32,  32,  36,  39,  40,  41,  43,  45,  54,  54,  55,  55,  56,  56,  58,  61,  63,  65,  65,  66,  66,  68,  71,  72,  72,  77,  77,  78,  78,  81,  82,  85,  88,  91,  95,  100, 101, 103, 107, 107, 111, 112, 114, 119, 122, 126, 130, 128, 132, 132, 137, 144, 149, 161, 163, 165, 171, 174, 179, 182, 188, 193, 196, 209, 218, 236, 242, 255, 266, 272, 276, 288, 291, 305, 320, 323, 331, 342, 348, 354, 365, 374, 377, 383, 389, 390, 401, 406, 417, 427, 434, 438, 443, 447, 454, 459, 460, 474, 484, 489, 496, 501, 506, 508, 513, 519, 524, 528, 532, 533, 542, 542, 545, 550, 552, 553, 556, 560, 563, 563, 565, 570, 574, 576, 578, 580, 581, 582, 584, 584]],
                [79932, [1, 2, 2, 6, 6,     7,  7 , 7,  7,  9,  11, 11, 11,  11, 15,  16,  19, 20, 20, 20, 20, 21, 25, 25, 27,  29,  29,  30,  31,  33,  35,  36,  38,  38,  38,  46,  47,  51,  54,  55,  56,  57,  57,  57,  61,  62,  63,  65,  67,  70,  70,  74,  76,  79,  79,  79,  79,  80,  81,  81,  82,  84,  86,  90,  90,  93,  93,  96,  96,  97,  97,  99,  100, 103, 105, 106, 107, 107, 107, 108, 108, 112, 114, 114, 115, 118, 125, 128, 132, 135, 137, 145, 147, 161, 165, 167, 175, 179, 185, 199, 208, 219, 224, 232, 237, 241, 250, 256, 263, 266, 282, 287, 294, 302, 307, 318, 325, 335, 338, 349, 357, 361, 371, 375, 377, 382, 398, 407, 415, 431, 436, 457, 458, 474, 483, 488, 496, 516, 523, 524, 530, 540, 542, 545, 558, 557, 561, 563, 568, 570, 573, 580, 585, 585, 587, 590, 594, 598, 605, 607, 613, 616, 617, 620, 623, 625]],
                [79934, [2, 3, 3, 3, 3,     4,  5 , 10, 12, 14, 14, 15, 16,  16, 17,  18,  20, 22, 22, 22, 22, 25, 26, 26, 26,  26,  26,  26,  26,  26,  27,  28,  28,  28,  28,  28,  29,  30,  31,  32,  32,  32,  32,  33,  36,  36,  37,  37,  37,  38,  38,  40,  41,  41,  43,  46,  46,  46,  47,  47,  48,  48,  48,  48,  48,  51,  52,  53,  54,  54,  54,  56,  57,  57,  60,  60,  62,  65,  69,  71,  69,  74,  78,  79,  80,  83,  86,  92,  95,  96,  95,  96,  102, 106, 109, 110, 117, 122, 125, 129, 135, 151, 155, 158, 161, 161, 174, 175, 177, 185, 199, 202, 209, 218, 227, 234, 235, 244, 247, 252, 258, 257, 262, 269, 277, 285, 292, 304, 308, 321, 321, 324, 324, 336, 342, 345, 352, 356, 356, 358, 361, 365, 368, 371, 375, 376, 381, 382, 385, 390, 392, 392, 395, 397, 399, 402, 407, 412, 414, 414, 415, 416, 417, 419, 422, 424]],
                [79935, [2, 3, 3, 4, 4,     4,  5 , 9,  10, 11, 11, 12, 13,  13, 14,  16,  14, 15, 17, 18, 18, 20, 20, 20, 23,  25,  25,  26,  26,  26,  26,  26,  26,  26,  26,  25,  25,  31,  31,  31,  31,  31,  32,  32,  33,  34,  36,  39,  40,  40,  40,  41,  42,  42,  42,  42,  42,  42,  45,  45,  47,  48,  48,  49,  49,  51,  51,  52,  52,  52,  54,  55,  56,  57,  59,  60,  63,  67,  71,  78,  81,  84,  86,  86,  92,  95,  99,  104, 108, 111, 114, 121, 127, 132, 138, 137, 140, 145, 148, 157, 163, 169, 178, 187, 188, 190, 196, 207, 211, 211, 222, 227, 239, 244, 252, 257, 262, 266, 272, 275, 280, 283, 283, 287, 299, 306, 310, 314, 319, 326, 344, 347, 351, 358, 361, 366, 371, 379, 390, 393, 398, 403, 406, 408, 410, 413, 419, 420, 422, 431, 434, 434, 437, 439, 442, 443, 444, 447, 447, 447, 448, 449, 451, 454, 455, 455]],
                [79936, [5, 7, 9, 13, 16,   19, 20, 23, 27, 30, 38, 42, 48,  49, 57,  66,  72, 77, 84, 85, 86, 91, 96, 98, 101, 115, 117, 121, 124, 129, 135, 138, 140, 141, 149, 144, 150, 156, 164, 170, 172, 172, 179, 182, 197, 200, 205, 215, 219, 228, 236, 252, 255, 260, 273, 273, 276, 281, 288, 294, 298, 306, 307, 310, 316, 334, 342, 351, 357, 363, 370, 379, 387, 392, 411, 417, 423, 426, 429, 433, 444, 453, 472, 477, 490, 515, 541, 626, 639, 685, 706, 731, 765, 799, 845, 893, 932, 1003, 1030, 1085, 1149, 1217, 1278, 1332, 1352, 1394, 1448, 1498, 1533, 1612, 1658, 1698, 1745, 1784, 1821, 1859, 1903, 1944, 1954, 1973, 1997, 2015, 2065, 2084, 2132, 2150, 2192, 2220, 2239, 2283, 2295, 2334, 2346, 2423, 2462, 2484, 2540, 2609, 2660, 2686, 2708, 2740, 2764, 2785, 2796, 2806, 2842, 2851, 2868, 2888, 2910, 2933, 2947, 2967, 2980, 2993, 2997, 3018, 3043, 3051, 3068, 3076, 3085, 3096, 3106, 3110]],
                [79938, [5, 8, 10, 12, 12,  15, 17, 20, 24, 28, 35, 32, 36,  38, 45,  48,  59, 71, 74, 75, 76, 83, 94, 101,102, 110, 116, 120, 124, 127, 130, 140, 146, 151, 157, 161, 164, 173, 184, 189, 193, 193, 202, 204, 218, 224, 233, 236, 239, 244, 255, 269, 277, 289, 294, 301, 303, 312, 320, 324, 368, 373, 374, 380, 383, 437, 532, 529, 531, 533, 536, 548, 556, 562, 568, 569, 583, 583, 596, 606, 613, 630, 654, 659, 672, 689, 703, 716, 734, 767, 791, 809, 844, 871, 915, 958, 992, 1024, 1045, 1088, 1157, 1198, 1241, 1287, 1326, 1360, 1405, 1433, 1459, 1495, 1544, 1565, 1591, 1627, 1647, 1673, 1689, 1720, 1748, 1815, 1880, 1898, 1933, 1943, 1972, 1991, 2015, 2033, 2048, 2078, 2094, 2130, 2135, 2192, 2212, 2220, 2245, 2306, 2333, 2350, 2369, 2391, 2410, 2419, 2439, 2451, 2462, 2470, 2486, 2505, 2516, 2536, 2549, 2563, 2573, 2579, 2590, 2601, 2620, 2630, 2634, 2639, 2648, 2661, 2680, 2687]],
                ]

    zip_data_tick_amount = 8

    @links = [ ["epstrong.org - May 21, 2020 – #{@last_updated_on.strftime('%B %e, %Y')}", "http://epstrong.org/results.php"],
               ["City of El Paso Facebook - May 20, 2020", "https://www.facebook.com/notes/city-of-el-paso-texas-municipal-government/city-reports-two-additional-deaths/3037450162961073/"],
               ["City of El Paso Facebook - May 19, 2020", "https://www.facebook.com/notes/city-of-el-paso-texas-municipal-government/city-reports-five-additional-deaths/3034810143225075/"],
               ["City of El Paso Facebook - May 18, 2020", "https://www.facebook.com/notes/city-of-el-paso-texas-municipal-government/city-reports-additional-cases-open-texas-efforts-delayed-one-week/3032758493430240/"],
               ["City of El Paso Facebook - May 17, 2020", "https://www.facebook.com/notes/city-of-el-paso-texas-municipal-government/city-reports-one-additional-death-urges-residents-to-take-precautions/3029618743744215/"],
               ["City of El Paso Facebook - May 16, 2020", "https://www.facebook.com/notes/city-of-el-paso-texas-municipal-government/city-reports-one-additional-death-assisting-regional-community/3026910704015019/"],
               ["City of El Paso Facebook - May 15, 2020", "https://www.facebook.com/notes/city-of-el-paso-texas-municipal-government/city-reports-two-additional-deaths-over-2000-people-tested-in-48-hour-period/3023288814377208/"],
               ["City of El Paso Facebook - May 14, 2020", "https://www.facebook.com/notes/city-of-el-paso-texas-municipal-government/city-reports-two-additional-deaths-testing-availability-extended/3020874404618649/"],
               ["City of El Paso Facebook - May 13, 2020", "https://www.facebook.com/notes/city-of-el-paso-texas-municipal-government/covid-19-update-city-reports-five-additional-deaths/3017487421624014/"],
               ["City of El Paso Facebook - May 12, 2020", "https://www.facebook.com/notes/city-of-el-paso-texas-municipal-government/city-reports-three-additional-deaths/3015394595166630/"],
               ["City of El Paso Facebook - May 11, 2020", "https://www.facebook.com/notes/city-of-el-paso-texas-municipal-government/covid-19-update-council-extends-emergency-ordinances/3012964052076351/"],
               ["City of El Paso Facebook - May 10, 2020", "https://www.facebook.com/notes/city-of-el-paso-texas-municipal-government/city-reports-one-covid-19-death-urges-residents-to-protect-vulnerable-population/3010518662320890/"],
               ["City of El Paso Facebook - May 9, 2020", "https://www.facebook.com/notes/city-of-el-paso-texas-municipal-government/city-urges-residents-to-celebrate-mothers-day-virtually/3008140949225328/"],
               ["City of El Paso Facebook - May 8, 2020", "https://www.facebook.com/notes/city-of-el-paso-texas-municipal-government/city-reports-two-additional-deaths-another-spike-in-positive-cases/3005807076125382/"],
               ["City of El Paso Facebook - May 7, 2020", "https://www.facebook.com/notes/city-of-el-paso-texas-municipal-government/city-council-to-amend-local-directive-reports-seven-deaths/3003177806388309/"],
               ["City of El Paso Facebook - May 6, 2020", "https://www.facebook.com/notes/city-of-el-paso-texas-municipal-government/city-reports-one-covid-19-death-urges-residents-to-protect-vulnerable-population/3001071953265561/"],
               ["City of El Paso Facebook - May 5, 2020", "https://www.facebook.com/notes/city-of-el-paso-texas-municipal-government/case-numbers-continue-increasing-residents-urged-to-wear-face-coverings/2998656446840445/"],
               ["City of El Paso Facebook - May 4, 2020", "https://www.facebook.com/notes/city-of-el-paso-texas-municipal-government/covid-19-update-positive-cases-reach-over-one-thousand/2996223767083713/"],
               ["City of El Paso Facebook - May 3, 2020", "https://www.facebook.com/notes/city-of-el-paso-texas-municipal-government/hospitalizations-numbers-decrease-community-reminded-to-remain-vigilant/2993828630656560/"],
               ["City of El Paso Facebook - May 2, 2020", "https://www.facebook.com/notes/city-of-el-paso-texas-municipal-government/covid-19-update-officials-urge-residents-to-abide-by-directive/2991387660900657/"],
               ["City of El Paso Facebook - May 1, 2020", "https://www.facebook.com/notes/city-of-el-paso-texas-municipal-government/city-reports-one-covid-19-death-urges-residents-to-abide-local-directive/2989215137784576/"],
               ["City of El Paso Facebook - April 30, 2020", "https://www.facebook.com/notes/city-of-el-paso-texas-municipal-government/city-reports-3-deaths-amends-directives-and-expands-testing/2986507024722054/"],
               ["City of El Paso Facebook - April 29, 2020", "https://www.facebook.com/notes/city-of-el-paso-texas-municipal-government/city-reports-four-additional-deaths-urges-caution-as-directives-changed/2983956864977070/"],
               ["City of El Paso Facebook - April 28, 2020", "https://www.facebook.com/notes/city-of-el-paso-texas-municipal-government/covid-19-update-city-county-to-amend-local-directive-report-two-deaths/2981770255195731/"],
               ["City of El Paso Facebook - April 27, 2020", "https://www.facebook.com/notes/city-of-el-paso-texas-municipal-government/covid-19-update-city-reviews-states-phased-plan-to-reopen-texas/2978956308810459/"],
               ["City of El Paso Facebook - April 26, 2020", "https://www.facebook.com/notes/city-of-el-paso-texas-municipal-government/covid-19-update-recovery-numbers-rising-vulnerable-residents-still-at-risk/2976831909022899/"],
               ["City of El Paso Facebook - April 25, 2020", "https://www.facebook.com/notes/city-of-el-paso-texas-municipal-government/covid-19-update-city-reports-large-increase-two-deaths/2974481669257923/"],
               ["City of El Paso Facebook - April 24, 2020", "https://www.facebook.com/notes/city-of-el-paso-texas-municipal-government/covid-19-update-residents-urged-to-abide-by-amended-directive-to-reduce-the-spre/2972383936134363/"],
               ["City of El Paso Facebook - April 23, 2020", "https://www.facebook.com/notes/city-of-el-paso-texas-municipal-government/emergency-directives-amended-aimed-at-reducing-spread-of-covid-19/2969708026401954/"],
               ["City of El Paso Facebook - April 22, 2020", "https://www.facebook.com/notes/city-of-el-paso-texas-municipal-government/covid-19-update-el-paso-reports-one-additional-covid-19-death/2967347239971366/"],
               ["City of El Paso Facebook - April 21, 2020", "https://www.facebook.com/notes/city-of-el-paso-texas-municipal-government/covid-19-update-city-moves-into-phase-iii-for-drive-thru-specimen-collection/2964709783568445/"],
               ["City of El Paso Facebook - April 20, 2020", "https://www.facebook.com/notes/city-of-el-paso-texas-municipal-government/covid-19-update-el-paso-reports-one-covid-19-death-additional-cases/2962203613819062/"],
               ["City of El Paso Facebook - April 19, 2020", "https://www.facebook.com/notes/city-of-el-paso-texas-municipal-government/residents-urged-not-to-become-complacent/2959832750722815/"],
               ["City of El Paso Facebook - April 18, 2020", "https://www.facebook.com/notes/city-of-el-paso-texas-municipal-government/covid-19-update-officials-report-additional-covid-19-death/2957418227630934/"],
               ["City of El Paso Facebook - April 17, 2020", "https://www.facebook.com/notes/city-of-el-paso-texas-municipal-government/covid-19-update-state-parks-in-el-paso-to-remain-closed/2955366294502794/"],
               ["City of El Paso Facebook - April 16, 2020", "https://www.facebook.com/notes/city-of-el-paso-texas-municipal-government/covid-19-update-city-reports-one-additional-covid-19-death/2952784154761008/"],
               ["City of El Paso Facebook - April 15, 2020", "https://www.facebook.com/notes/city-of-el-paso-texas-municipal-government/covid-19-update-city-reports-two-additional-covid-19-deaths/2950272395012184/"],
               ["City of El Paso Facebook - April 14, 2020", "https://www.facebook.com/notes/city-of-el-paso-texas-municipal-government/covid-19-update-city-reports-two-additional-covid-19-deaths/2948122258560531/"],
               ["City of El Paso Facebook - April 13, 2020", "https://www.facebook.com/notes/city-of-el-paso-texas-municipal-government/covid-19-update-city-officials-warn-residents-to-comply/2945502088822548/"],
               ["City of El Paso Facebook - April 12, 2020", "https://www.facebook.com/notes/city-of-el-paso-texas-municipal-government/covid-19-update-el-paso-reports-increase-in-positive-cases/2943092272396863/"],
               ["City of El Paso Facebook - April 11, 2020", "https://www.facebook.com/notes/city-of-el-paso-texas-municipal-government/covid-19-update-el-paso-positive-cases-increase/2940750515964372/"],
               ["City of El Paso Facebook - April 10, 2020", "https://www.facebook.com/notes/city-of-el-paso-texas-municipal-government/second-covid-19-death-in-el-paso/2938552939517463/"],
               ["City of El Paso Facebook - April 9, 2020", "https://www.facebook.com/notes/city-of-el-paso-texas-municipal-government/first-covid-19-death-in-el-paso/2936167889755968/"],
               ["City of El Paso Facebook - April 8, 2020", "https://www.facebook.com/notes/city-of-el-paso-texas-municipal-government/covid-19-update-el-paso-positive-cases-continue-to-climb/2933837686655655/"],
               ["City of El Paso Facebook - April 7, 2020", "https://www.facebook.com/notes/city-of-el-paso-texas-municipal-government/el-paso-sees-largest-spike-in-covid-19-cases/2931741400198617/"],
               ["City of El Paso Facebook - April 6, 2020", "https://www.facebook.com/notes/city-of-el-paso-texas-municipal-government/covid-19-update-ten-new-cases-new-safety-recommendations/2929484987090925/"],
               ["City of El Paso Facebook - April 5, 2020", "https://www.facebook.com/notes/city-of-el-paso-texas-municipal-government/covid-19-update-el-paso-identifies-additional-covid-19-cases/2927135207325903/"],
               ["City of El Paso Facebook - April 4, 2020", "https://www.facebook.com/notes/city-of-el-paso-texas-municipal-government/covid-19-update-el-paso-reaches-triple-digits-in-positive-cases/2924932514212839/"],
               ["City of El Paso Facebook - April 3, 2020", "https://www.facebook.com/notes/city-of-el-paso-texas-municipal-government/covid-19-update-el-paso-identifies-additional-covid-19-cases/2923000401072717/"],
               ["City of El Paso Facebook - April 2, 2020", "https://www.facebook.com/notes/city-of-el-paso-texas-municipal-government/covid-19-update-el-paso-identifies-additional-covid-19-cases/2920931354612955/"],
               ["City of El Paso Facebook - April 1, 2020", "https://www.facebook.com/notes/city-of-el-paso-texas-municipal-government/city-amends-emergency-directive-aimed-at-reducing-spread-of-covid-19/2918569611515796/"],
               ["City of El Paso Facebook - March 31, 2020", "https://www.facebook.com/notes/city-of-el-paso-texas-municipal-government/covid-19-update-el-paso-identifies-additional-covid-19-cases/2916368208402603/"],
               ["El Paso Matters - March 30, 2020", "https://elpasomatters.org/2020/03/30/el-paso-has-begun-showing-general-location-of-covid-19-positive-tests/"]
             ]

    

    @total_cases = total_cases_by_day_data.last
    @total_recoveries = total_recoveries_by_day_data.last
    @total_deaths = total_deaths_by_day_data.last
    @new_cases = total_cases_by_day_data.last(2)[1] - total_cases_by_day_data.last(2)[0] - delayed_results_by_day_data.last
    @delayed_results = delayed_results_by_day_data.last
    # if @last_updated_on <= Time.zone.parse("2020-08-11 23:59:59")
    #   # 8/11 Adjustment
    #   @new_cases = 215
    # end
    # if @last_updated_on <= Time.zone.parse("2020-08-15 23:59:59")
    #   # 8/15 Adjustment
    #   @new_cases = 91
    # end
    # if @last_updated_on <= Time.zone.parse("2020-08-16 23:59:59")
    #   # 8/16 Adjustment
    #   @new_cases = 57
    # end
    # if @last_updated_on <= Time.zone.parse("2020-08-17 23:59:59")
    #   # 8/17 Adjustment
    #   @new_cases = 125
    # end
    # if @last_updated_on <= Time.zone.parse("2020-08-18 23:59:59")
    #   # 8/18 Adjustment
    #   @new_cases = 141
    # end
    # if @last_updated_on <= Time.zone.parse("2020-08-19 23:59:59")
    #   # 8/19 Adjustment
    #   @new_cases = 152
    # end
    # if @last_updated_on <= Time.zone.parse("2020-08-20 23:59:59")
    #   # 8/20 Adjustment
    #   @new_cases = 109
    # end
    @new_deaths = total_deaths_by_day_data.last(2)[1] - total_deaths_by_day_data.last(2)[0]
    
    zip_data_max_value = @total_cases_by_zip_code.map { |entry| entry[2] }.max
    
    ##### Globals

    @chart_globals = LazyHighCharts::HighChartGlobals.new do |f|
      f.chart(style: { fontFamily: '\'Inter\', sans-serif'})
      f.lang(thousandsSep: ",")
      f.colors(["#fed907", "#f70000", "#8085e9", "#f15c80", "#e4d354"])
      f.plotOptions( line: { marker: false }, area: { marker: false } )
    end

    ##### Total Cases and Recoveries by Day
    
    @total_cases_by_day = LazyHighCharts::HighChart.new('graph') do |f|
      f.xAxis(title: { enabled: false }, categories: total_cases_by_day_categories)
      f.series(name: "Total Cases", data: total_cases_by_day_data)
      f.series(name: "Total Recoveries", data: total_recoveries_by_day_data)

      f.yAxis [
        { title: { enabled: false }, allowDecimals: false, max: total_cases_by_day_max, tickAmount: total_cases_by_day_tick_amount },
      ]

      f.colors(["#fed907", "#26dc4e"])
      # f.legend(enabled: false)
      f.chart({defaultSeriesType: "line"})
      f.plotOptions( area: { marker: false } )
    end

    @total_cases_by_day_logarithmic = LazyHighCharts::HighChart.new('graph') do |f|
      f.xAxis(title: { enabled: false }, categories: total_cases_by_day_categories)
      f.series(name: "Total Cases", data: total_cases_by_day_data)
      f.series(name: "Total Recoveries", data: total_recoveries_by_day_data)

      f.yAxis [
        { type: 'logarithmic', title: { enabled: false }, allowDecimals: false, tickPositions: [1, 10, 100, 1000, 10000, 100000].map { |v| Math.log10(v) } },
      ]

      f.colors(["#fed907", "#26dc4e"])
      # f.legend(enabled: false)
      f.chart({defaultSeriesType: "line"})
      f.plotOptions( area: { marker: false } )
    end

    ##### New Cases by Day
    
    new_cases_by_day_data = []

    for i in (1..total_cases_by_day_data.size - 1)
      # if i == 151
      #   # 8/11 Adjustment
      #   new_cases_by_day_data += [215]
      # elsif i == 155
      #   # 8/15 Adjustment
      #   new_cases_by_day_data += [91]
      # elsif i == 156
      #   # 8/16 Adjustment
      #   new_cases_by_day_data += [57]
      # elsif i == 157
      #   # 8/17 Adjustment
      #   new_cases_by_day_data += [125]
      # elsif i == 158
      #   # 8/18 Adjustment
      #   new_cases_by_day_data += [141]
      # elsif i == 159
      #   # 8/19 Adjustment
      #   new_cases_by_day_data += [152]
      # elsif i == 160
      #   # 8/20 Adjustment
      #   new_cases_by_day_data += [109]
      # else
        new_cases_by_day_data += [total_cases_by_day_data[i] - total_cases_by_day_data[i - 1] - delayed_results_by_day_data[i - 1]]
      # end
    end

    new_cases_by_day_average_data = []

    for i in (6..new_cases_by_day_data.size - 1)
      new_cases_by_day_average_data += [new_cases_by_day_data.sma(i,7).round(1)]
    end

    @new_cases_by_day = LazyHighCharts::HighChart.new('graph') do |f|
      f.xAxis(title: { enabled: false }, categories: total_cases_by_day_categories.drop(1))
      f.series(name: "New Cases", data: new_cases_by_day_data)
      f.series(name: "Delayed Positive Cases", data: delayed_results_by_day_data)
      f.series(name: "7-Day Average (New Cases)", data: new_cases_by_day_average_data.pad!((new_cases_by_day_average_data.size + 6) * -1,nil), type: "line")

      f.yAxis [
        { title: { enabled: false }, allowDecimals: false, max: new_cases_by_day_max, tickAmount: new_cases_by_day_tick_amount },
      ]


      f.plotOptions(series: { stacking: 'normal' })

      f.colors(["#fed907", "#fe8107", "#aaaaaa"])
      # f.legend(enabled: false)
      f.chart({defaultSeriesType: "column"})
    end

    ##### New Recoveries by Day
    
    new_recoveries_by_day_data = []

    for i in (1..total_recoveries_by_day_data.size - 1)
      if !total_recoveries_by_day_data[i].nil? && !total_recoveries_by_day_data[i - 1].nil?
        new_recoveries_by_day_data += [total_recoveries_by_day_data[i] - total_recoveries_by_day_data[i - 1]]
      end
    end

    new_recoveries_by_day_average_data = []

    for i in (6..new_recoveries_by_day_data.size - 1)
      new_recoveries_by_day_average_data += [new_recoveries_by_day_data.sma(i,7).round(1)]
    end

    @new_recoveries_by_day = LazyHighCharts::HighChart.new('graph') do |f|
      f.xAxis(title: { enabled: false }, categories: total_cases_by_day_categories.last(new_recoveries_by_day_data.size))
      f.series(name: "New Recoveries", data: new_recoveries_by_day_data)
      f.series(name: "7-Day Average", data: new_recoveries_by_day_average_data.pad!((new_recoveries_by_day_average_data.size + 6) * -1,nil), type: "line")

      f.yAxis [
        { title: { enabled: false }, allowDecimals: false, max: new_cases_by_day_max, tickAmount: new_cases_by_day_tick_amount },
      ]

      f.colors(["#26dc4e", "#aaaaaa"])
      # f.legend(enabled: false)
      f.chart({defaultSeriesType: "column"})
    end

    ##### Active Cases by Day

    padded_total_deaths_by_day_data = total_deaths_by_day_data.pad(total_cases_by_day_data.length * -1, 0)

    active_cases_by_day_data = []

    for i in (0..total_cases_by_day_data.size - 1)
        active_cases_by_day_data += [total_cases_by_day_data[i] - (total_recoveries_by_day_data[i] || 0) - padded_total_deaths_by_day_data[i] - deaths_under_investigation_by_day_data[i]]
        # puts active_cases_by_day_data
    end

    active_cases_by_day_average_data = []

    for i in (6..active_cases_by_day_data.size - 1)
      active_cases_by_day_average_data += [active_cases_by_day_data.sma(i,7).round(1)]
    end

    @active_cases_by_day = LazyHighCharts::HighChart.new('graph') do |f|
      f.xAxis(title: { enabled: false }, categories: total_cases_by_day_categories.last(active_cases_by_day_data.size))
      f.series(name: "Active Cases", data: active_cases_by_day_data)
      f.series(name: "7-Day Average", data: active_cases_by_day_average_data.pad!((active_cases_by_day_average_data.size + 6) * -1,nil), type: "line")

      f.yAxis [
        { title: { enabled: false }, allowDecimals: false, max: active_cases_max, tickAmount: active_cases_by_day_tick_amount },
      ]

      f.colors(["#fed907", "#aaaaaa"])
      # f.legend(enabled: false)
      f.chart({defaultSeriesType: "column"})
    end


    ##### Total Deaths by Day
    
    @total_deaths_by_day = LazyHighCharts::HighChart.new('graph') do |f|
      f.xAxis(title: { enabled: false }, categories: total_deaths_by_day_categories)
      f.series(name: "Total Deaths", data: total_deaths_by_day_data)

      f.yAxis [
        { title: { enabled: false }, allowDecimals: false, max: total_deaths_by_day_max, tickAmount: total_deaths_by_day_tick_amount },
      ]

      f.colors(["#f70000"])
      f.legend(enabled: false)
      f.chart({defaultSeriesType: "line", height: 350})
    end

    @total_deaths_by_day_logarithmic = LazyHighCharts::HighChart.new('graph') do |f|
      f.xAxis(title: { enabled: false }, categories: total_deaths_by_day_categories)
      f.series(name: "Total Deaths", data: total_deaths_by_day_data)

      f.yAxis [
        { type: 'logarithmic', title: { enabled: false }, allowDecimals: false, tickPositions: [1, 10, 100, 1000].map { |v| Math.log10(v) } },
      ]

      f.colors(["#f70000"])
      f.legend(enabled: false)
      f.chart({defaultSeriesType: "line", height: 350})
    end

    ##### New Deaths by Day
    
    new_deaths_by_day_data = []

    for i in (1..total_deaths_by_day_data.size - 1)
      new_deaths_by_day_data += [total_deaths_by_day_data[i] - total_deaths_by_day_data[i - 1]]
    end

    new_deaths_by_day_average_data = []

    for i in (6..new_deaths_by_day_data.size - 1)
      new_deaths_by_day_average_data += [new_deaths_by_day_data.sma(i,7).round(1)]
    end

    @new_deaths_by_day = LazyHighCharts::HighChart.new('graph') do |f|
      f.xAxis(title: { enabled: false }, categories: total_deaths_by_day_categories.drop(1))
      f.series(name: "New Deaths", data: new_deaths_by_day_data)
      f.series(name: "7-Day Average", data: new_deaths_by_day_average_data.pad!((new_deaths_by_day_average_data.size + 6) * -1,nil), type: "line")

      f.yAxis [
        { title: { enabled: false }, allowDecimals: false, max: new_deaths_by_day_max_value, tickAmount: new_deaths_by_day_tick_amount },
      ]

      f.colors(["#f70000", "#aaaaaa"])
      # f.legend(enabled: false)
      f.chart({defaultSeriesType: "column"})
    end

    ##### Total Cases by Age Range

    @total_cases_by_age_range = LazyHighCharts::HighChart.new('graph') do |f|
      f.xAxis(title: { enabled: false }, categories: total_cases_by_age_range_categories)
      f.series(name: "Total Cases", data: total_cases_by_age_range_data)

      f.yAxis [
        { title: { enabled: false }, allowDecimals: false, max: total_cases_by_age_range_max, tickAmount: total_cases_by_age_range_tick_amount },
      ]

      f.legend(enabled: false)
      f.chart({defaultSeriesType: "bar", height: 350})
    end

    ##### Total Deaths by Age Range

    @total_deaths_by_age_range = LazyHighCharts::HighChart.new('graph') do |f|
      f.xAxis(title: { enabled: false }, categories: total_cases_by_age_range_categories)
      f.series(name: "Total Deaths", data: total_deaths_by_age_range_data)

      f.yAxis [
        { title: { enabled: false }, allowDecimals: false, max: total_deaths_by_age_range_max },
      ]

      f.colors(["#f70000"])
      f.legend(enabled: false)
      f.chart({defaultSeriesType: "bar", height: 350})
    end

    ##### Total Cases by Gender

    @total_cases_by_gender = LazyHighCharts::HighChart.new('graph') do |f|
      # f.xAxis(title: { enabled: false }, categories: ["Male", "Female"])
      f.series(name: "Total Cases", data: [ { name: 'Male', y: total_cases_by_gender_male }, { name: 'Female', y: total_cases_by_gender_female }])

      # f.yAxis [
      #   { title: { enabled: false }, allowDecimals: false },
      # ]
      f.colors(["#999999", "#666666"])
      f.chart({defaultSeriesType: "pie", height: 350})
    end

    ##### Patients in Hospital

    patients_hospitalized_average_data = []

    for i in (6..patients_hospitalized_data.size - 1)
      patients_hospitalized_average_data += [patients_hospitalized_data.sma(i,7).round(1)]
    end
    
    @patients_hospitalized = LazyHighCharts::HighChart.new('graph') do |f|
      f.xAxis(title: { enabled: false }, categories: patients_hospitalized_categories)
      f.series(name: "Patients", data: patients_hospitalized_data)
      f.series(name: "7-Day Average", data: patients_hospitalized_average_data.pad!((patients_hospitalized_average_data.size + 6) * -1,nil), type: "line")

      f.yAxis [
        { title: { enabled: false }, allowDecimals: false, max: patients_hospitalized_max_value, tickAmount: patients_hospitalized_tick_amount },
      ]

      f.colors(["#fed907", "#aaaaaa"])
      # f.legend(enabled: false)
      f.chart({defaultSeriesType: "column", height: 350})
    end

    ##### Patients in ICU
    
    patients_in_icu_average_data = []

    for i in (6..patients_in_icu_data.size - 1)
      patients_in_icu_average_data += [patients_in_icu_data.sma(i,7).round(1)]
    end

    @patients_in_icu = LazyHighCharts::HighChart.new('graph') do |f|
      f.xAxis(title: { enabled: false }, categories: patients_in_icu_categories)
      f.series(name: "Patients", data: patients_in_icu_data)
      f.series(name: "7-Day Average", data: patients_in_icu_average_data.pad!((patients_in_icu_average_data.size + 6) * -1,nil), type: "line")

      f.yAxis [
        { title: { enabled: false }, allowDecimals: false, max: patients_in_icu_max_value, tickAmount: patients_in_icu_tick_amount },
      ]

      f.colors(["#fed907", "#aaaaaa"])
      # f.legend(enabled: false)
      f.chart({defaultSeriesType: "column", height: 350})
    end

    ##### Total Cases by Zip Code

    @total_cases_by_individual_zip_code = Hash.new

    for entry in zip_data
      zip_code = entry[0]
      data = entry[1]

      @total_cases_by_individual_zip_code[zip_code] = LazyHighCharts::HighChart.new('graph') do |f|
        f.xAxis(title: { enabled: false }, categories: zip_data_categories_1.drop(zip_data_categories_1.size - data.size))
        f.series(name: "Total Cases", data: data)



        f.yAxis [
          { title: { enabled: false }, allowDecimals: false, max: zip_data_max_value, tickAmount: zip_data_tick_amount },
        ]

        f.legend(enabled: false)
        f.chart({defaultSeriesType: "line", height: 200})
      end
    end

  end
end
